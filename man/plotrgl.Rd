% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualise_rgl.R
\name{plotrgl}
\alias{plotrgl}
\title{Plot atoms and bonds in 3D with rgl}
\usage{
plotrgl(
  molecule,
  highlight = NULL,
  highlight_colour = "pink",
  atom_colour_type = c("element", "elena", "eleno"),
  clear_scene = TRUE,
  colour_map_atom = pal_atoms(),
  missing = "grey",
  strip_numbers = TRUE,
  bond_width = 2,
  axes = FALSE,
  colour_bg = "black",
  colour_axis = "red",
  label_mode = c("none", "no_atoms", "transparent"),
  label = c("element", "elena", "eleno"),
  label_cex = 1,
  label_colour = "#F0F8E6",
  atom_alpha = 1,
  atom_alpha_when_labelled = 0.1,
  atom_radius = 0.3,
  atom_shininess = 100,
  bond_alpha = 1,
  grid = FALSE,
  grid_n = 10,
  aspect = c(1, 1, 1),
  userMatrix = NULL,
  show_anchor = FALSE,
  anchor_scale = 0.3,
  anchor_colour = "pink"
)
}
\arguments{
\item{molecule}{A \code{Molecule3D} object (see \code{structures::read_mol2()}).}

\item{highlight}{Optional selection of atoms to highlight. Either values of
\code{eleno} (atom IDs) or a logical vector aligned with \code{molecule@atoms}.}

\item{highlight_colour}{Single colour for highlighted atoms (default \code{"pink"}).}

\item{atom_colour_type}{One of \code{c("element","elena","eleno")}; selects which
column drives per-atom colours.}

\item{clear_scene}{Logical; if \code{TRUE}, clears the current rgl scene first.}

\item{colour_map_atom}{Named character vector mapping key \eqn{\rightarrow} colour
(e.g., Jmol-style palette) used by \code{prepare_atoms_for_plotting()}.}

\item{missing}{Colour used when a key is not found in \code{colour_map_atom}.}

\item{strip_numbers}{Logical; if \code{TRUE}, digits are stripped from labels
before colour lookup (e.g., \code{"C12"} \eqn{\rightarrow} \code{"C"}).}

\item{bond_width}{Numeric line width for bonds.}

\item{axes}{Logical; draw axes box and axis labels.}

\item{colour_bg}{Background colour for the scene.}

\item{colour_axis}{Axis/label colour.}

\item{label_mode}{One of \code{c("none","no_atoms","transparent")} controlling
atom/label display:
\itemize{
\item \code{"none"}: spheres only, no labels;
\item \code{"no_atoms"}: labels only (no spheres);
\item \code{"transparent"}: labels and semi-transparent, non-specular spheres.
}}

\item{label}{One of \code{c("element","elena","eleno")}; column in \code{atoms}
used for text labels when \code{label_mode != "none"}.}

\item{label_cex}{Character expansion for labels.}

\item{label_colour}{Label colour; if \code{NULL}, labels inherit the per-atom
colour (\code{..colour}).}

\item{atom_alpha}{Sphere opacity when \code{label_mode != "transparent"}.}

\item{atom_alpha_when_labelled}{Sphere opacity when \code{label_mode == "transparent"}.}

\item{atom_radius}{Sphere radius.}

\item{atom_shininess}{Sphere shininess; forced to \code{0} when
\code{label_mode == "transparent"} for a flat look.}

\item{bond_alpha}{Opacity of bond segments.}

\item{grid}{Logical; draw orthogonal reference grids.}

\item{grid_n}{Integer; number of grid lines per axis when \code{grid = TRUE}.}

\item{aspect}{Length-3 numeric vector for aspect ratio (reserved; not currently applied).}

\item{userMatrix}{Optional 4×4 user view matrix (e.g., from \code{rgl::par3d("userMatrix")})
to set the camera/view.}

\item{show_anchor}{Render a wireframe octahedron wherever the anchor is}

\item{anchor_scale}{Control size of the anchor (number)}

\item{anchor_colour}{Colour of the anchor (string)}
}
\value{
(Invisibly) a list:
\describe{
\item{atoms}{Integer vector of rgl object IDs for atom spheres (or \code{NULL} if not drawn).}
\item{bonds}{Integer vector of rgl object IDs for bond segments.}
}
}
\description{
Renders a ball–stick view of a \code{Molecule3D} using \strong{rgl}. Atoms are drawn
as spheres, bonds as line segments, and optional labels can be shown with
different display modes via \code{label_mode}.
}
\details{
Bonds are expanded with atom coordinates using \code{enrich_bonds_with_xyz_position()}
and interleaved by \code{to_interleaved()} into alternating start/end rows for
\code{rgl::segments3d()}. Labels are drawn with \code{rgl::texts3d()} and use
depth settings that keep them visible over spheres.
}
\examples{
\dontrun{
mol <- structures::read_mol2(system.file(package = "chemviewR", "benzene.mol2"))
plotrgl(mol, axes = TRUE, grid = TRUE)

# Labels only
plotrgl(mol, label_mode = "no_atoms", label = "elena")

# Reuse a saved camera/view
M <- rgl::par3d("userMatrix")
plotrgl(mol, userMatrix = M)
}

}
\seealso{
prepare_atoms_for_plotting, enrich_bonds_with_xyz_position, to_interleaved
}
